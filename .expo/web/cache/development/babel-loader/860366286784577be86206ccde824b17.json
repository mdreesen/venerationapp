{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.centeredView,\n    children: [_jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Hello World!\"\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Hide Modal\"\n            })\n          })]\n        })\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Sign Up\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"transparent\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","App","modalVisible","setModalVisible","styles","centeredView","Alert","alert","modalView","modalText","button","buttonClose","textStyle","buttonOpen","StyleSheet","create","flex","justifyContent","alignItems","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","fontSize","marginBottom"],"sources":["/Users/michaeldreesen/Documents/Programming/projects/venerationapp/app/components/signupModal/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\n\nconst App = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"fade\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Hello World!</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n\n        <Text style={styles.textStyle}>Sign Up</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"transparent\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,gBAAwCD,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOE,YAAP;EAAA,IAAqBC,eAArB;;EACA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,YAApB;IAAA,WACE,KAAC,KAAD;MACE,aAAa,EAAC,MADhB;MAEE,WAAW,EAAE,IAFf;MAGE,OAAO,EAAEH,YAHX;MAIE,cAAc,EAAE,0BAAM;QACpBI,KAAK,CAACC,KAAN,CAAY,wBAAZ;QACAJ,eAAe,CAAC,CAACD,YAAF,CAAf;MACD,CAPH;MAAA,UASE,KAAC,IAAD;QAAM,KAAK,EAAEE,MAAM,CAACC,YAApB;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAED,MAAM,CAACI,SAApB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAEJ,MAAM,CAACK,SAApB;YAAA;UAAA,EADF,EAEE,KAAC,SAAD;YACE,KAAK,EAAE,CAACL,MAAM,CAACM,MAAR,EAAgBN,MAAM,CAACO,WAAvB,CADT;YAEE,OAAO,EAAE;cAAA,OAAMR,eAAe,CAAC,CAACD,YAAF,CAArB;YAAA,CAFX;YAAA,UAIE,KAAC,IAAD;cAAM,KAAK,EAAEE,MAAM,CAACQ,SAApB;cAAA;YAAA;UAJF,EAFF;QAAA;MADF;IATF,EADF,EAsBE,KAAC,SAAD;MACE,KAAK,EAAE,CAACR,MAAM,CAACM,MAAR,EAAgBN,MAAM,CAACS,UAAvB,CADT;MAEE,OAAO,EAAE;QAAA,OAAMV,eAAe,CAAC,IAAD,CAArB;MAAA,CAFX;MAAA,UAKE,KAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACQ,SAApB;QAAA;MAAA;IALF,EAtBF;EAAA,EADF;AAgCD,CAlCD;;AAoCA,IAAMR,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC/BV,YAAY,EAAE;IACZW,IAAI,EAAE,CADM;IAEZC,cAAc,EAAE,QAFJ;IAGZC,UAAU,EAAE;EAHA,CADiB;EAM/BV,SAAS,EAAE;IACTW,MAAM,EAAE,EADC;IAETC,eAAe,EAAE,OAFR;IAGTC,YAAY,EAAE,EAHL;IAITC,OAAO,EAAE,EAJA;IAKTJ,UAAU,EAAE,QALH;IAMTK,WAAW,EAAE,MANJ;IAOTC,YAAY,EAAE;MACZC,KAAK,EAAE,CADK;MAEZC,MAAM,EAAE;IAFI,CAPL;IAWTC,aAAa,EAAE,IAXN;IAYTC,YAAY,EAAE,CAZL;IAaTC,SAAS,EAAE;EAbF,CANoB;EAqB/BnB,MAAM,EAAE;IACNW,YAAY,EAAE,EADR;IAENC,OAAO,EAAE,EAFH;IAGNO,SAAS,EAAE;EAHL,CArBuB;EA0B/BhB,UAAU,EAAE;IACVO,eAAe,EAAE;EADP,CA1BmB;EA6B/BT,WAAW,EAAE;IACXS,eAAe,EAAE;EADN,CA7BkB;EAgC/BR,SAAS,EAAE;IACTkB,KAAK,EAAE,OADE;IAETC,UAAU,EAAE,MAFH;IAGTC,SAAS,EAAE,QAHF;IAITC,QAAQ,EAAE;EAJD,CAhCoB;EAuC/BxB,SAAS,EAAE;IACTyB,YAAY,EAAE,EADL;IAETF,SAAS,EAAE;EAFF;AAvCoB,CAAlB,CAAf;AA6CA,eAAe/B,GAAf"},"metadata":{},"sourceType":"module"}